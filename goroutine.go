package main

import "fmt"

// Печатает на стандартный вывод и отправляет int в канал
func printHello(ch chan int) {
	fmt.Println("Hello from printHello")
	// Посылает значение в канал
	ch <- 2
}

func main() {
	// Создаем канал. Для этого нам нужно использовать функцию make
	// Каналы могут быть буферизированными с заданным размером:
	// ch := make(chan int, 2), но это выходит за рамки данной статьи.
	ch := make(chan int)

	// Встроенная горутина. Определим функцию, а затем вызовем ее.
	// Запишем в канал по её завершению
	go func(){
		fmt.Println("Hello inline")
		// Отправляем значение в канал
		ch <- 1
	}()

	// Вызываем функцию как горутину
	go printHello(ch)
	fmt.Println("Hello from main")

	// Получаем первое значение из канала
	// и сохраним его в переменной, чтобы позже распечатать
	i := <- ch
	fmt.Println("Received ", i)

	// Получаем второе значение из канала
	// и не сохраняем его, потому что не будем использовать
	//sec := <- ch
	//fmt.Println(sec)
}